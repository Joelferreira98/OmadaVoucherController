#!/bin/bash

# Script para gerenciar o servi√ßo voucher-app
echo "üõ†Ô∏è  Gerenciamento do Servi√ßo Voucher Management System"
echo "======================================================="

# Fun√ß√£o para mostrar status
show_status() {
    echo "üìä Status dos Servi√ßos:"
    echo "----------------------"
    echo "üîπ Voucher App:"
    systemctl is-active voucher-app && echo "‚úÖ Rodando" || echo "‚ùå Parado"
    
    echo "üîπ Nginx:"
    systemctl is-active nginx && echo "‚úÖ Rodando" || echo "‚ùå Parado"
    
    echo "üîπ MySQL:"
    systemctl is-active mysql && echo "‚úÖ Rodando" || echo "‚ùå Parado"
    
    echo ""
    echo "üîç Detalhes do Voucher App:"
    systemctl status voucher-app --no-pager -l
}

# Fun√ß√£o para mostrar logs
show_logs() {
    echo "üìã Logs do Sistema:"
    echo "------------------"
    echo "üîπ √öltimas 50 linhas do voucher-app:"
    journalctl -u voucher-app -n 50 --no-pager
    
    echo ""
    echo "üîπ √öltimas 20 linhas do Nginx:"
    tail -n 20 /var/log/nginx/voucher-app.access.log 2>/dev/null || echo "Arquivo de log n√£o encontrado"
    
    echo ""
    echo "üîπ Erros do Nginx:"
    tail -n 10 /var/log/nginx/voucher-app.error.log 2>/dev/null || echo "Sem erros recentes"
}

# Fun√ß√£o para reiniciar servi√ßos
restart_services() {
    echo "üîÑ Reiniciando servi√ßos..."
    
    echo "üîπ Reiniciando voucher-app..."
    systemctl restart voucher-app
    
    echo "üîπ Reiniciando nginx..."
    systemctl restart nginx
    
    sleep 3
    
    echo "‚úÖ Servi√ßos reiniciados"
    show_status
}

# Fun√ß√£o para testar conectividade
test_connectivity() {
    echo "üîç Testando conectividade:"
    echo "-------------------------"
    
    # Teste local
    echo "üîπ Teste local (porta 5000):"
    curl -I http://localhost:5000 2>/dev/null && echo "‚úÖ OK" || echo "‚ùå Falha"
    
    # Teste Nginx
    echo "üîπ Teste Nginx (porta 80):"
    curl -I http://localhost 2>/dev/null && echo "‚úÖ OK" || echo "‚ùå Falha"
    
    # Teste banco de dados
    echo "üîπ Teste MySQL:"
    systemctl is-active mysql && echo "‚úÖ MySQL rodando" || echo "‚ùå MySQL parado"
}

# Fun√ß√£o para monitoramento em tempo real
monitor_realtime() {
    echo "üìä Monitoramento em tempo real (Ctrl+C para sair):"
    echo "==================================================="
    
    # Monitorar logs em tempo real
    tail -f /var/log/nginx/voucher-app.access.log &
    journalctl -u voucher-app -f
}

# Fun√ß√£o para backup
backup_config() {
    echo "üíæ Criando backup das configura√ß√µes..."
    
    BACKUP_DIR="/opt/voucher-app/backups/$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$BACKUP_DIR"
    
    # Backup arquivos principais
    cp -r /opt/voucher-app/.env "$BACKUP_DIR/" 2>/dev/null
    cp -r /opt/voucher-app/static "$BACKUP_DIR/" 2>/dev/null
    cp /etc/systemd/system/voucher-app.service "$BACKUP_DIR/" 2>/dev/null
    cp /etc/nginx/sites-available/voucher-app "$BACKUP_DIR/" 2>/dev/null
    
    echo "‚úÖ Backup criado em: $BACKUP_DIR"
}

# Menu principal
case "$1" in
    "status")
        show_status
        ;;
    "logs")
        show_logs
        ;;
    "restart")
        restart_services
        ;;
    "test")
        test_connectivity
        ;;
    "monitor")
        monitor_realtime
        ;;
    "backup")
        backup_config
        ;;
    *)
        echo "Uso: $0 {status|logs|restart|test|monitor|backup}"
        echo ""
        echo "Comandos dispon√≠veis:"
        echo "  status   - Mostrar status dos servi√ßos"
        echo "  logs     - Mostrar logs do sistema"
        echo "  restart  - Reiniciar todos os servi√ßos"
        echo "  test     - Testar conectividade"
        echo "  monitor  - Monitoramento em tempo real"
        echo "  backup   - Fazer backup das configura√ß√µes"
        echo ""
        echo "Exemplos:"
        echo "  sudo $0 status"
        echo "  sudo $0 logs"
        echo "  sudo $0 restart"
        ;;
esac