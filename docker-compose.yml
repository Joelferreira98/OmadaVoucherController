# Alternativa Docker - docker-compose.yml
version: '3.8'

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: voucher_db
      MYSQL_USER: voucher
      MYSQL_PASSWORD: voucher_password_123
      MYSQL_ROOT_PASSWORD: root_password_123
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - SESSION_SECRET=sua_chave_secreta_muito_forte_aqui_123456789
      - DATABASE_URL=mysql+pymysql://voucher:voucher_password_123@db:3306/voucher_db
      - OMADA_CONTROLLER_URL=https://seu-omada-controller.com:8043
      - OMADA_CLIENT_ID=seu_client_id
      - OMADA_CLIENT_SECRET=seu_client_secret
      - OMADA_OMADAC_ID=seu_omadac_id
    depends_on:
      - db
    volumes:
      - ./static:/app/static
      - ./templates:/app/templates
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./static:/var/www/static
    depends_on:
      - app
    restart: unless-stopped

volumes:
  mysql_data:

# Arquivo Dockerfile necess√°rio:
# FROM python:3.11-slim
# WORKDIR /app
# COPY requirements.txt .
# RUN pip install -r requirements.txt
# COPY . .
# CMD ["gunicorn", "--bind", "0.0.0.0:5000", "main:app"]