#!/bin/bash

# Script simplificado para download e instala√ß√£o
# Este script baixa os arquivos da aplica√ß√£o e executa a instala√ß√£o

set -e

echo "========================================================="
echo "       Download e Instala√ß√£o - Sistema de Vouchers"
echo "========================================================="
echo ""

# Verificar se curl est√° instalado
if ! command -v curl &> /dev/null; then
    echo "Instalando curl..."
    sudo apt update
    sudo apt install -y curl
fi

# Solicitar URL do reposit√≥rio ou arquivo ZIP
echo "Para instalar o sistema, voc√™ precisa fornecer:"
echo "1. URL de um reposit√≥rio Git, ou"
echo "2. URL de um arquivo ZIP com os arquivos da aplica√ß√£o"
echo ""

read -p "Digite a URL do reposit√≥rio ou arquivo ZIP: " REPO_URL

if [ -z "$REPO_URL" ]; then
    echo "‚ùå URL n√£o informada!"
    exit 1
fi

# Criar diret√≥rio tempor√°rio
TEMP_DIR="/tmp/voucher-app-$(date +%s)"
mkdir -p "$TEMP_DIR"
cd "$TEMP_DIR"

echo "üì• Fazendo download dos arquivos..."

# Verificar se √© Git ou ZIP
if [[ "$REPO_URL" == *.git ]] || [[ "$REPO_URL" == *github.com* ]] || [[ "$REPO_URL" == *gitlab.com* ]]; then
    # √â um reposit√≥rio Git
    if ! command -v git &> /dev/null; then
        echo "Instalando git..."
        sudo apt update
        sudo apt install -y git
    fi
    
    git clone "$REPO_URL" app
    cd app
    
elif [[ "$REPO_URL" == *.zip ]]; then
    # √â um arquivo ZIP
    if ! command -v unzip &> /dev/null; then
        echo "Instalando unzip..."
        sudo apt update
        sudo apt install -y unzip
    fi
    
    curl -L -o app.zip "$REPO_URL"
    unzip app.zip
    
    # Encontrar a pasta da aplica√ß√£o
    if [ -f "app.py" ] && [ -f "main.py" ]; then
        # Arquivos est√£o na raiz
        echo "‚úì Arquivos encontrados na raiz"
    else
        # Procurar em subpastas
        APP_DIR=$(find . -name "app.py" -type f | head -1 | xargs dirname)
        if [ -n "$APP_DIR" ]; then
            cd "$APP_DIR"
            echo "‚úì Arquivos encontrados em: $APP_DIR"
        else
            echo "‚ùå Arquivos da aplica√ß√£o n√£o encontrados no ZIP!"
            exit 1
        fi
    fi
    
else
    echo "‚ùå URL n√£o reconhecida! Use um reposit√≥rio Git (.git) ou arquivo ZIP (.zip)"
    exit 1
fi

# Verificar se os arquivos necess√°rios est√£o presentes
if [ ! -f "app.py" ] || [ ! -f "main.py" ]; then
    echo "‚ùå Arquivos obrigat√≥rios n√£o encontrados!"
    echo "Procurando por: app.py, main.py"
    echo "Conte√∫do do diret√≥rio:"
    ls -la
    exit 1
fi

echo "‚úì Arquivos da aplica√ß√£o baixados com sucesso!"

# Verificar se o script de instala√ß√£o est√° presente
if [ ! -f "install_vps.sh" ]; then
    echo "‚ùå Script de instala√ß√£o (install_vps.sh) n√£o encontrado!"
    echo "Criando script de instala√ß√£o..."
    
    # Baixar script de instala√ß√£o do reposit√≥rio (caso n√£o esteja inclu√≠do)
    curl -s -o install_vps.sh "https://raw.githubusercontent.com/exemplo/voucher-app/main/install_vps.sh" || {
        echo "‚ùå N√£o foi poss√≠vel baixar o script de instala√ß√£o!"
        echo "Certifique-se de que o arquivo install_vps.sh est√° inclu√≠do no reposit√≥rio."
        exit 1
    }
fi

chmod +x install_vps.sh

echo ""
echo "üöÄ Iniciando instala√ß√£o autom√°tica..."
echo ""

# Executar script de instala√ß√£o
bash install_vps.sh

echo ""
echo "‚úÖ Instala√ß√£o conclu√≠da!"